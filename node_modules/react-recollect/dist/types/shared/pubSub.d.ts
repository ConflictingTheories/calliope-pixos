/**
 * This file is unfortunate. I would prefer for the proxy handler to call
 * `updateStore` directly, but there is circular logic:
 * object change » handler » update store » clone » create proxy » handler
 * The logic is sound (?), but the import loop needs to be broken somewhere,
 * hence this file.
 */
import { AfterChangeEvent, UpdateInStore, UpdateInStoreProps } from './types';
export declare const onUpdateInNextStore: (func: UpdateInStore) => void;
export declare const dispatchUpdateInNextStore: (data: UpdateInStoreProps) => any;
/**
 * Add a callback to be called every time the store changes
 */
export declare const afterChange: (cb: (e: AfterChangeEvent) => void) => void;
